version: '3.8'
services:
  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER:-ai_video_subtitle}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-subtitle_video_ai}
      POSTGRES_DB: ${DB_NAME:-ai_subtitles}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file: .env
  redis:
    image: redis:7
    restart: always
  app:
    build: .
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000
    volumes:
      - ./:/app
    env_file: .env
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
  celery:
    build: .
    command: celery -A app.tasks.celery_app:celery_app worker --loglevel=info
    volumes:
      - ./:/app
    env_file: .env
    depends_on:
      - postgres
      - redis
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/www:/var/www/certbot
      - certbot-etc:/etc/letsencrypt
    depends_on:
      - app
  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/www:/var/www/certbot
      - certbot-etc:/etc/letsencrypt
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done'"
  certbot-init:
    image: certbot/certbot
    volumes:
      - ./certbot/www:/var/www/certbot
      - certbot-etc:/etc/letsencrypt
    command: certonly --webroot --webroot-path=/var/www/certbot --email your-email@example.com --agree-tos --no-eff-email -d api.voxsonus.com
    depends_on:
      - nginx
volumes:
  postgres_data:
  certbot-etc:
